events {}

http {
    server {
        listen 80;

        # Rutas para el microservicio de autenticación (user-auth) - Auth
        location /api/auth/ {
            proxy_pass http://user-auth:5001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Rutas para el microservicio de autenticación (user-auth) - Info de usuario
        location /api/user/profile/ {
            proxy_pass http://user-auth:5001/user/profile/; # Dirige al nuevo endpoint en el backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # Ruta para las métricas del microservicio de autenticación
        location /metrics/auth {
            proxy_pass http://user-auth:5001/user_metric;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # Rutas para el microservicio de rutas (route-scheduler) - Rutas generales
        location /api/routes/ {
            proxy_pass http://route-scheduler:5004/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Rutas para el microservicio de rutas (route-scheduler) - Horarios (¡NUEVO BLOQUE!)
        location /api/routes/schedules/ {
             # Esta regla más específica coincide con las peticiones que buscan horarios.
             # proxy_pass http://route-scheduler:5004/schedules/; # Opción 1: pasar /schedules/
             # La opción más segura y que se alinea con la ruta de Flask /schedules/<int:route_id> es pasar solo /schedules/
             # y dejar que Flask maneje el <int:route_id>
             proxy_pass http://route-scheduler:5004/schedules/;

             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # Ruta para las métricas del microservicio de rutas
        location /metrics/routes {
            proxy_pass http://route-scheduler:5004/route_metric;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # Rutas para el microservicio de reservas (bus-reservation)
        location /api/reservation/ {
            proxy_pass http://bus-reservation:5002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Ruta para las métricas del microservicio de reservas
        location /metrics/reservation {
            proxy_pass http://bus-reservation:5002/reserv_metric;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # Rutas para el microservicio de pagos (payment-gateway)
        location /api/payment/ {
            proxy_pass http://payment-gateway:5003/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Ruta para las métricas del microservicio de pagos
        location /metrics/payment {
            proxy_pass http://payment-gateway:5003/pay_metric;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # Servir el frontend estático
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            # Forzar tipos MIME para CSS y JS
            types {
                text/html html;
                text/css css;
                application/javascript js;
            }
        }
    }
}
